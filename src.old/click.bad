
I know about and have not dealt with the following issues in Click!

----------------------------------------------------------------------

#ifdef SOMETHING
if x
#else
   if y
#endif

      do something

   endif

This causes an overflow and is always going to break Click!.

The cure is to match the #ifdef on the other end of the control
structure, like:

#ifdef SOMETHING
if x
#else
   if y
#endif

      do something

#ifdef SOMETHING
   endif
#else
endif
#endif

There will never be a fix for this in Click!, since there is no way to
process the #define _and_ give you back your original source code.

----------------------------------------------------------------------

if foo then bar

and

if foo then bar
endif

are both valid structure, but I haven't figured out how to catch the
first one. I'll figure it out, but not right now...

----------------------------------------------------------------------

// I don't think this will ever be fixed. So, if you modify the base
// language structure, you take your life in your own hands.

// I'm not planning on adding a preprocessor

#xcommand DO FOREVER => Do While .T.

Method Main()

   Do Forever
      ? time()
   EndDo

Return( NIL )

----------------------------------------------------------------------

