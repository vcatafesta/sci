#line 45 "sixtools.prg"
FUNC Odometer( nRecCount, nLineNum, nColNum )

LOCAL nPctDone := 0
STATIC nLine := 0
STATIC nRecs := 0
STATIC nRec := 0
STATIC nCol := 0
STATIC cScreen := ""


IF BOF()
   nLine := IF(nLineNum == NIL, MaxRow()/2, Min( nLineNum, MaxRow() ))
   nRecs := IF(nRecCount == NIL, LastRec(), nRecCount)
   nCol  := IF(nColNum  == NIL, 15, Min( nColNum, 15 ))
   nRec := 0
   cScreen := SaveScreen( nLine-2, nCol-1, nLine+2, nCol+52 )

   Scroll( nLine-2, nCol-1, nLine+2, nCol+52 )
   DispBox( nLine-2, nCol-1, nLine+2, nCol+52, 1 )
   DevPos( nLine-2, nCol+1 ) ; DevOut( Sx_I_IndexName() )


   IF (!(Sx_I_TagName() == Sx_I_IndexName()))
      DevPos( nLine-2, nCol+50-Len( Sx_I_TagName()) ) ; DevOut( Sx_I_TagName() )
   ENDIF


ELSEIF EOF()
   DevPos( nLine-1, nCol+1 ) ; DevOut( Replicate(" ",47) + "100%" )
   DevPos( nLine, nCol+1 ) ; DevOut( Replicate("ß", 50) )

   DevPos( nLine+1, nCol ) ; DevOut( "Chaves Processadas #" + Left(LTrim(Str(nRecs))+Space(10),10) )

   DevPos( nLine+1, nCol+26 ) ; DevOut( " Chaves Incluidas #" + Left( LTrim( Str( Sx_KeysIncluded())) + Space(10),10) )


   RestScreen( nLine-2, nCol-1, nLine+2, nCol+52, cScreen )


ELSE

   nRec += Sx_Step()

   nPctDone := (nRec / nRecs) * 100

   DevPos( nLine-1, nCol+1 ) ; DevOut( Replicate(" ", ((nPctDone-.5) / 2) -2) + Str(nPctDone,3)+"%" )


   DevPos( nLine, nCol+1 ) ; DevOut( Replicate("Ü", ((nPctDone-.5) / 2 )) + "³" + Replicate("ß", ( 50 - (nPctDone / 2))) )


   DevPos( nLine+1, nCol ) ; DevOut( "Processando Chave # "+Left(LTrim(Str(MIN(nRec,nRecs))+Space(10)),10) +" de # "+Left(LTrim(Str(nRecs))+Space(10),10) + Space(6) )
ENDIF

RETURN( .T. )











FUNC Sx_AddKeys( cTag, nOrder, aKey2Add )

LOCAL nX := 1
LOCAL lRetVal := .T.
LOCAL bKeys := {|| Sx_Keyadd( cTag, nOrder, aKey2Add[nX++]) }

IF ValType( aKey2Add ) == "A"
  AEval( aKey2Add, bKeys )
  lRetVal := IF( AScan( aKey2Add, NIL ) < 1, .T., .F. )
ELSE
  lRetVal := Sx_KeyAdd( cTag, nOrder, aKey2Add )
ENDIF

RETURN(lRetVal)










FUNC Sx_GetKeys()

LOCAL aReturn[1]
LOCAL nRecNo := RecNo()

IF Sx_FindRec( nRecNo )
  aReturn[1] := Sx_KeyData()
END
WHILE Sx_FindRec( nRecNo, .T. )
  AAdd( aReturn, Sx_KeyData() )
END

dbGoto( nRecNo )

RETURN( aReturn )






















FUNC Dots( nStartCol )

LOCAL nCol := Col()
STATIC lOut := .T.

IF nCol == nStartCol
   lOut := .T.
ELSEIF nCol == MaxCol()-2
   DevPos( Row(), nCol-1 )
   QQOut(" ")
   lOut := .F.
ENDIF

IF lOut
   QQOut(".")
ELSE
   DevPos( Row(), nCol-2 )
   QQOut(" ")
ENDIF

Return(.T.)



















FUNC IndexBar( nTotal )

STATIC aScrn, cSaveColor, nLast

LOCAL nRecs := Sx_KeysIncluded() , cStd := "GR+/B"


IF Bof()
  nLast := iif( nTotal == NIL, LastRec(), nTotal )
  cSaveColor := SetColor( "GR+/B,R+/W" )

  aScrn := { 8, 10, 8 + 11, 10 + 60 , SaveScreen( 8, 10, 8 + 11, 10 + 60 ) }
  DispBox( 8, 10, 8 + 11, 10 + 60 , 2 )
  Scroll( 8 + 1, 10 + 1, 8 + 10, 10 + 59 )
  SetPos( 8 + 2, 10 + 5)
  DevOut( "Creating Index      :               ")
  SetPos( 8 + 3, 10 + 5)
  DevOut( "Tag name            :               ")
  SetPos( 8 + 4, 10 + 5)
  DevOut( "Total Records       :               ")
  SetPos( 8 + 5, 10 + 5)
  DevOut( "Current Record      :               ")
  SetPos( 8 + 6, 10 + 5)
  DevOut( "Percentage complete :               ")
  SetPos( 8 + 8, 10 + 5)
  DevOut( "0% ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 50% ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ 100%")


  Scroll(8 + 2, 10  + 27, 8 + 11 - 5, 10 + 60 - 1, 0 )
  SetPos( 8 + 2, 10  + 28)
  DevOut( Sx_I_IndexName())
  SetPos( 8 + 3, 10  + 28)
  DevOut( Sx_I_TagName()  )
  SetPos( 8 + 4, 10  + 28)
  DevOut( LTrim( Transform( nLast,"999,999,999")) )
  aReplicate( 8 + 9, 10 + 5, chr(219), 50, "N/N" )

ELSEIF Eof()
  SetColor( cSaveColor )
  RestScreen( aScrn[1], aScrn[2], aScrn[3], aScrn[4], aScrn[5] )

ELSE

  SetPos( 8 + 5, 10 + 28)
  DevOut( LTrim( Transform( nRecs ,  "999,999,999")), cStd )
  SetPos( 8 + 6, 10 + 28)
  DevOut( LTrim( Transform( ( nRecs / nLast) * 100 ,  "999")),cStd )



  aReplicate( 8 + 9, 10 + 5, chr(219), int(( nRecs / nLast) * 50 ), "GR+/W" )
ENDIF

Return(.T.)


FUNC aReplicate( nR, nC, cSt, nLen, cColor )

SetPos( nR, nC )
DevOut( Replicate( cSt, nLen ), cColor )

Return(NIL)
#line 286 "sixtools.prg"
FUNCTION ShowIt()

LOCAL aBogus := { "-", "\", "|", "/" }
STATIC nCount, cColor, lBlink, cScreen, nRow, nCol

IF Bof()
  cScreen := SaveScreen( 0,0,MaxRow(),MaxCol() )
  lBlink := SetBlink(.F.)
  cColor := SetColor("b/w*")
  DispBox(11,20,13,59,( Chr( 218 ) + Chr( 196 ) + Chr( 191 ) + Chr( 179 ) +  Chr( 217 ) + Chr( 196 ) + Chr( 192 ) + Chr( 179 ) )+" ")
  DevPos( 11, 35 ) ; DevOut( " Working   " )
  nCount := 0
  nRow := Row()
  nCol := Col()
ELSEIF Eof()
  SetColor( cColor )
  SetBlink( lBlink )
  RestScreen( 0,0,MaxRow(),MaxCol(),cScreen )
  DevPos( nRow, nCol )
ELSE
  nCount++
  DevPos( 11, 44 ) ; DevOut( aBogus[ nCount ] )
  DevPos( 12, 25 ) ; DevOut( Sx_I_IndexName() + " : " + Sx_I_TagName() )
  nCount := iif( nCount == 4, 0, nCount )
ENDIF

Return(.T.)












FUNC MyAlert( cText, aOptions )

LOCAL nRetVal := 0
LOCAL lBlink := SetBlink(.F.)

nRetVal := Alert( cText, aOptions, "n/gr*" )
SetBlink( lBlink )

Return( nRetVal )
